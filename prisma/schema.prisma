generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Project {
  id           String   @id @default(cuid())
  title        String
  description  String
  technologies String
  image        String
  githubLink   String?
  websiteLink  String?
  language     String // Language code (e.g., "en", "es")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([language]) // Optimized for filtering by language
}

model Feedback {
  id        String   @id @default(cuid())
  happiness Int
  comment   String?
  createdAt DateTime @default(now())
  //   ipAddress String?  // Add this for rate limiting
}

model Post {
  id           String        @id @default(cuid())
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  slug         String        @unique
  image        String?
  tags         TagOnPost[]
  translations Translation[]
}

model Translation {
  id       String  @id @default(cuid())
  postId   String
  language String // e.g., "en", "es"
  title    String
  content  String  @db.Text
  summary  String? @db.Text
  post     Post    @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@unique([postId, language]) // Ensure one translation per language per post
}

model Tag {
  id    String      @id @default(cuid())
  name  String      @unique
  posts TagOnPost[]
}

model TagOnPost {
  id     String @id @default(cuid())
  postId String
  tagId  String
  post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  tag    Tag    @relation(fields: [tagId], references: [id], onDelete: Cascade)

  @@unique([postId, tagId]) // Prevent duplicate tag associations
}

// model Clap {
//   id        String   @id @default(cuid())
//   createdAt DateTime @default(now())
//   postId    String
//   ipAddress String?  // Add this for rate limiting
//   post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)

//   @@index([postId])
//   @@index([ipAddress, postId]) // Add index for rate limiting queries
// }
